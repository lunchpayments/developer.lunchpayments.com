openapi: 3.1.0
info:
  title: Lunch B2B API
  description: Lunch enables platforms to embed financing and payments via API.
  termsOfService: https://www.lunchpayments.com/termsofservice
  contact:
    name: API Support and Inquiries
    url: https://www.lunchpayments.com/learnmore
    email: cullen@lunchpayments.com
  version: 1.1.1
servers:
  - url: https://api.lunchpayments.com/b2b
paths:
  /authenticate:
    post:
      description: Lunch uses OAuth2 for authentication. The Client ID and Client Secret are configured on the Developer tab in the Lunch App for the CP’s account.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - clientId
                - clientSecret
                - username
                - password
              properties:
                clientId:
                  type: string
                  description: Public identifier in Lunch’s Oauth2 platform for the Channel Partner
                clientSecret:
                  type: string
                  description: Oauth2 client secret
                username:
                  type: string
                  description: OAuth2 account username
                password:
                  type: string
                  description: OAuth2 account password
      responses:
        "200":
          description: Successful authentication with the OAuth2 server
          content:
            application/json:
              schema:
                type: object
                properties:
                  idToken: 
                    type: string
                    description: OAuth2 credential to access resources
                  refreshToken:
                    type: string
                    description: For obtaining access tokens when the existing token expires
        "400":
          $ref: "#/components/responses/BadRequest"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /get-ach-details:
    post:
      description: The ACH details to make the payment to for an invoice using the make-payment API
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - invoiceExternalId
              properties:
                invoiceExternalId:
                  type: string
                  description: Unique uuid for the invoice in the Lunch Platform.

      responses:
        "200":
          description: The ACH details for the make-payment call
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountNumber:
                    type: string
                    description: ACH bank account number
                  routingNumber:
                    type: string
                    description: ACH bank routing number
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /get-paid-now:
    post:
      description: Embedded financing API.
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - invoiceId
              properties:
                amount:
                  type: integer
                  description: Invoice total amount in cents.
                invoiceId:
                  type: string
                  description: Unique id in the Channel Partner Platform or database for the invoice.
                vendorId:
                  type: string
                  description: Unique id in the Channel Partner Platform or database for the Vendor.
                externalVendorId:
                  type: string
                  description: Unique uuid for the Vendor in the Lunch Platform.

      responses:
        "201":
          description: Successful get paid now request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  externalOrderId:
                    type: string
                    description: Unique uuid for Get Paid Now in the Lunch Platform.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /invoice:
    post:
      description: The Approved Invoice API ingests invoices that are approved to be paid by the Buyer, putting the invoice in a state where they are eligible for Get Paid Now.
      tags:
        - Accounts Receivable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoiceRequest"
      responses:
        "200":
          description: Successful approved invoice. 
          content:
            application/json:
              schema:
              $ref: "#/components/schemas/InvoiceResponse"

        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /make-payment:
    post:
      description: Initiate payment orders between Payor and Payee.
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - invoiceExternalId
                - payorAccountId
                - payorRoutingNum
                - payeeAccountId
                - payeeRoutingNum
              properties:
                invoiceExternalId:
                  type: string
                  description: Unique uuid for the invoice in the Lunch Platform.
                payorAccountId:
                  type: string
                  description: Payor’s bank account id from check.
                payorRoutingNum:
                  type: string
                  description: Payor’s bank account routing number from check.
                payeeAccountId:
                  type: string
                  description: Payee’s bank account id from check.
                payeeRoutingNum:
                  type: string
                  description: Payee’s bank account routing number from check.

      responses:
        "202":
          description: Successful initiation of the payment order. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentExternalId:
                    type: string
                    description: Unique uuid for the payment in the Lunch Platform.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /purchase-order:
    post:
      description: Create a Purchase Order.
      tags:
        - Accounts Receivable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderRequest"              
      responses:
        "200":
          description: Successful creation of the purchase order. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderResponse"

        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
        default:
          $ref: "#/components/responses/UnexpectedError"

    put:
      description: Update a Purchase Order.
      tags:
        - Accounts Receivable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderRequest"              
      responses:
        "200":
          description: Successful update of the purchase order. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"          
        "5XX":
          $ref: "#/components/responses/InternalServerError"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /submitted-invoice:
    get:
      description: Submitted invoice webhook. A submitted invoice is when a vendor creates and submits an invoice to the payor.
      tags:
        - Webhooks
      callbacks:
        SubmittedInvoice:
          get:
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/SubmittedInvoiceResponse"


components:
  securitySchemes:
    ApiKeyAuth:
      description: Send idToken from authenticate in the Authorization header
      type: apiKey
      in: header
      name: Authorization
  schemas:
    InvoiceRequest:
      type: object
      required:
        - invoiceId
        - invoiceNumber
        - issueDate
        - dueDate
        - amount
        - vendorExternalId
        - customerName
      properties:
        invoiceId:
          type: string
          description: Unique id for the invoice in the Channel Partner Platform or database.
        invoiceNumber:
          type: string
          description: Vendor's unique id for the invoice.
        issueDate:
          type: string
          description: Iso8601 UTC date when the invoice was issued by the buyer (format %Y-%m-%dT%H:%M:%S.%LZ).
        dueDate:
          type: string
          description: Iso8601 UTC date when the invoice was issued by the buyer (format %Y-%m-%dT%H:%M:%S.%LZ).
        amount:
          type: number
          description: Approved amount (after tax) to be paid on the invoice in dollar and cents.
        vendorExternalId:
          type: string
          description: Vendor who generated this invoice, the vendorExternalId represents the uuid for a vendor who has completed the onboarding.
        customerName:
          type: string
          description: Name of the customer the invoice was billed to.
        customerEmail:
          type: string
          description: Email of the customer the invoice was billed to, must be a valid email.
        customerAddress:
          type: string
          description: Address, city, state and zip of the customer the invoice was billed to.
        subTotalAmount:
          type: number
          description: The sub total (amount - taxAmount) in dollars.
        taxAmount:
          type: number
          description: The amount of tax paid in dollars on the invoice.
        taxPercent:
          type: number
          description: The percent tax for the invoice.
        lineItems:
          type: array
          description: Array of Line Items.
          $ref: "#/components/schemas/LineItems"
    InvoiceResponse:
      type: object
      properties:
        invoiceExternalId:
          type: string
          description: Unique uuid for the invoice in the Lunch Platform.
    PurchaseOrderRequest:
      type: object
      required:
        - purchaseOrderId
        - issuedDate
        - purchaseOrderNumber
        - vendorId
        - vendorName
        - vendorPhone
        - vendorAddress
        - vendorCity
        - vendorState
        - vendorZip
        - buyerId
        - buyerName
        - buyerAddress
        - buyerCity
        - buyerState
        - buyerZip
      properties:
        purchaseOrderId:
          type: string
          description: Unique id in the CP Platform or database for the purchase order.
        issuedDate:
          type: string
          description: Iso8601 UTC date when the purchase order was issued by the buyer (format %Y-%m-%dT%H:%M:%S.%LZ).
        dueDate:
          type: string
          description: Iso8601 UTC date when the purchase order is fulfilled by the vendor (format %Y-%m-%dT%H:%M:%S.%LZ).
        purchaseOrderGroup:
          type: string
          description: Buyer’s purchase order group.
        purchaseOrderNumber:
          type: string
          description: Buyer’s purchase order number.
        amount:
          type: number
          description: Format xxx.xx with maximum of 2 decimal places precision 
        description:
          type: string
          description: Buyer’s description of the services to be fulfilled.
        vendorId:
          type: string
          description: Channel Partners unique id for the vendor.
        vendorName:
          type: string
          description: Name of the vendor.
        vendorAttention:
          type: string
          description: Vendor employee to bring PO issuance attention to.
        vendorPhone:
          type: string
          description: Vendor’s phone number.
        vendorEmail:
          type: string
          description: Vendor’s email address.
        vendorAddress:
          type: string
          description: Vendor’s street address.
        vendorCity:
          type: string
          description: Vendor’s city address.
        vendorState:
          type: string
          description: Vendor’s state abbreviation.
        vendorZip:
          type: string
          description: Vendor’s zip code.
        buyerId:
          type: string
          description: Channel Partners unique id for the buyer.
        buyerName:
          type: string
          description: Name of the buyer.
        buyerddress:
          type: string
          description: Buyer's street address.
        buyerCity:
          type: string
          description: Buyer's city address.
        buyerState:
          type: string
          description: Buyer's state abbreviation.
        buyerZip:
          type: string
          description: Buyer's zip code.
    PurchaseOrderResponse:
      type: object
      required:
        - purchaseOrderExternalId
        - buyerInformationId
        - vendorInformationId
      properties:
        purchaseOrderExternalId:
          type: string
          description: Unique uuid for the purchase order in the Lunch Platform.
        buyerInformationId:
          type: string
          description: Unique uuid for the tokenized buyer information.
        vendorInformationId:
          type: string
          description: Unique uuid for the tokenized vendor information.
        vendorSignupLink:
          type: string
          description: Onboarding URL for vendor to access Get Paid Now on Lunch's vendor portal.
    SubmittedInvoiceResponse:
      type: object
      required:
        - invoiceInformationId
        - purchaseOrderId
        - purchaseOrderExternalId
        - vendorId
        - vendorExternalId
        - totalAmount
      properties:
        invoiceInformationId:
          type: string
          description: Unique uuid for the submitted invoice order in the Lunch Platform.
        purchaseOrderId:
          type: string
          description: Unique id in the CP Platform or database for the purchase order.
        purchaseOrderExternalId:
          type: string
          description: Unique uuid for the purchase order in the Lunch Platform.
        vendorId:
          type: string
          description: Unique id in the CP Platform or database for the vendor.
        vendorExternalId:
          type: string
          description: Unique uuid for the vendor in the Lunch Platform.
        vendorEmail:
          type: string
          description: Vendor’s email address.
        customer:
          type: object
          description: Customer details.
          properties:
            name:
              type: string
              description: The customer's name.
            email:
              type: string
              description: The customer's email.
            address:
              type: string
              description: The customer's address.
        submittedAt:
          type: string
          description: Iso8601 UTC date when the invoice was submitted (format %Y-%m-%dT%H:%M:%S.%LZ).
        issueDate:
          type: string
          description: Iso8601 UTC date when the invoice was issued (format %Y-%m-%dT%H:%M:%S.%LZ).
        dueDate:
          type: string
          description: Iso8601 UTC date when the invoice is due (format %Y-%m-%dT%H:%M:%S.%LZ).
        totalAmount:
          type: number
          description: Iso8601 UTC date when the invoice was submitted (format %Y-%m-%dT%H:%M:%S.%LZ).
        tax:
          type: number
          description: tax as a percent.
        lineItems:
          type: array
          description: Array of Line Items.
          $ref: "#/components/schemas/LineItems"
    LineItem:
      type: object
      required: 
        - description
        - quantity
        - rate
        - amount
      properties:
        description:
          type: string
        quantity:
          type: string
        rate:
          type: number
        amount:
          type: number
    LineItems:
      type: array
      items:
        $ref: "#/components/schemas/LineItem"
    error:
      type: object
      required: 
        - type
        - message
      properties:
        type:
          type: string
        message:
          type: string
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    UnexpectedError:
      description: Unexpected server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"